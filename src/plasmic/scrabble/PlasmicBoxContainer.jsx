/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsx createPlasmicElementProxy */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: pKf2ynt7Z23Yke58cAsgbA
// Component: gleJRcpqGK
import React from "react";
import { classNames, Renderer, PlasmicSlot } from "@plasmicapp/react-web";
import "@plasmicapp/react-web/lib/plasmic.css";
import "../plasmic__default_style.css"; // plasmic-import: global/defaultcss
import "./plasmic_scrabble.css"; // plasmic-import: pKf2ynt7Z23Yke58cAsgbA/projectcss
import "./PlasmicBoxContainer.css"; // plasmic-import: gleJRcpqGK/css

const PlasmicBoxContainer__RenderFuncs = {
  root: (opts) => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return (
      <div
        data-plasmic-override={overrides.root}
        data-plasmic-wrap-flex-child={true}
        className={classNames({
          BoxContainer__root__xxcbO: true,
          "plasmic-default__all": true,
          "plasmic-default__div": true
        })}
      >
        {PlasmicBoxContainer__RenderFuncs.children({
          variants,
          args,
          overrides
        })}
      </div>
    );
  },
  children: (opts) => {
    const variants = opts.variants || {};
    const args = opts.args || {};
    const overrides = opts.overrides || {};
    return <PlasmicSlot defaultContents={undefined} value={args.children} />;
  }
};

const PlasmicBoxContainer__FCs = {
  root: undefined,
  children: undefined
};

class PlasmicBoxContainer__Renderer extends Renderer {
  constructor(variants, args) {
    super(variants, args, PlasmicBoxContainer__RenderFuncs, "root");
  }
  create(variants, args) {
    return new PlasmicBoxContainer__Renderer(variants, args);
  }
  getInternalVariantProps() {
    return [];
  }
  getInternalArgProps() {
    return ["children"];
  }
  forNode(name) {
    return super.forNode(name);
  }
}

export const PlasmicBoxContainer = (props) => {
  return new PlasmicBoxContainer__Renderer(
    props.variants || {},
    props.args || {}
  )
    .forNode("root")
    .withOverrides({
      root: props.root
    })
    .render();
};

PlasmicBoxContainer.children = (props) => {
  return new PlasmicBoxContainer__Renderer(
    props.variants || {},
    props.args || {}
  )
    .forNode("children")
    .withOverrides({})
    .render();
};

PlasmicBoxContainer.createRenderer = () =>
  new PlasmicBoxContainer__Renderer({}, {});

export default PlasmicBoxContainer;
/* prettier-ignore-end */
